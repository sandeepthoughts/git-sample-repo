--------------Git Commands-------------------------
git status -> Prints the status of Git Repository.
git init -> Initalizes the Git Repository.
git config --global user.name "Let's Kode It"
git config --global user.email letskodeit@gmail.com
git config user.name "Let's Kode It"
git config user.email letskodeit@gmail.com
git add
git commit -m ""
git log  -> Till us the history of the file
git diff<filename>
------------------------------

git status -> Prints the status of Git Repository.
git init -> Initalizes the Git Repository.
git config --global user.name "Let's Kode It" -> Specify Username globally
git config --global user.email letskodeit@gmail.com   -> Specify Email globally
git config user.name "Let's Kode It"  -> Specify Username for particular repository
git config user.email letskodeit@gmail.com   -> Specify Email for particular repository
git add              -> Add file to staging environment                
git commit -m ""     -> Commit file to local Git Repository
git log  -> Till us the file history of the file    
git diff<filename>     -> Check the changes made to file with the existing file
git remote add origin <GitHub Repository URL>  -> Establish connection to the remote GitHub Repository
git push origin master        -> Push to master branch
============================================================================================================

Scenario 1:
First Release  -> Done
Second Release
         2 Features
	 2 People
Third Release
	 1 Feature
	 1 Person


Scenario 2:
Two people

Person A -> Enhance the framework
Person B -> Automating test cases

testmethod1 -> getName()

Person A -> Merge code to master
Person B -> Pull from master to private branch, merge code to master

Scenario 3: 
1 Person -> Two different feature
Work on different branches

	PrivateBranch1-----------
         |			| Merge
         |			|
------Master------Release----Master---Master----Release-----Master----
	 |				|
	 |				|  Pull
	 PrivateBranch2------------------